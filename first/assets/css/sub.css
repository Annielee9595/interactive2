.frame{
  transform: scale(6);
  margin-top: 300px;
  margin-left: 320px;
  margin-right: 328px;
}

/*
.typefaceScale{
  transform: scale(2);
}
.centeredBox{
  position: absolute;
  left: -5px;
  top: -27px; 
}*/

.windowBox{
  position: relative;
  left: 0;
  top: 0;
  /*화면조정용 > px로 바꿔서 조정*/
  width: 8000px;
  /*화면조정용 end */
  height: 100vh;
  /*background: white;*/
  overflow: hidden;
}

a{
  color: white;
  text-decoration: none;
}

div.mouse-cursor {
  /* create an arrow facing north-west, with border properties */
  width: 0;
  height: 0;

  /* with transparent border right and bottom, the arrow faces north-west
  the border top property describes the second half of the arrow
  the border bottom the former, so it's possible to style the arrow with two tones */
  border-top: 2rem solid black;
  border-right: 2rem solid black;
  border-bottom: 2rem solid black
  border-left: 2rem solid black;
  border-radius: 50px;
  /* absolute position the arrow somewhere in the screen (position updated with JS) */
  position: absolute;
  top: 50%;
  left: 50%;
  filter: drop-shadow(0 2px 0 #252525);
  z-index: -3;
}

/* add an animation to the after pseudo-element, through a class given to the connected element */
div.animation:after {
  animation: 0.5s showClick ease-out;
}

@keyframes showClick {
  /* expand the circle in size and dissipate in color */
  to {
    /* changing the size without changing the top and left properties expands the circle from the top left corner */
    width: 4rem;
    height: 4rem;
    /* changing the top and left properties allows to expand the circle in place (it'd be -4rem, but it is offset by the border-width property) */
    top: -3.25rem;
    left: -3.25rem;
    background: rgba(255,255,255,0);

  }
}